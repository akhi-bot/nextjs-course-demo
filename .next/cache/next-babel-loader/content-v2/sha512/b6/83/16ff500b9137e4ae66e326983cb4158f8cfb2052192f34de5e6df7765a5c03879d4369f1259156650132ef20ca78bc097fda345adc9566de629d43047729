{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\React-The_Complete_Guide_practice\\\\19_Introduction_to_NextJs\\\\Practice_project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/React-The_Complete_Guide_practice/19_Introduction_to_NextJs/Practice_project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","MeetupDetails","props","meetupData","title","description","image","address"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAGF,KAAK,CAACC,UAAN,CAAiBE;AAApD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAGH,KAAK,CAACC,UAAN,CAAiBG,KAD3B;AAEE,MAAA,KAAK,EAAGJ,KAAK,CAACC,UAAN,CAAiBC,KAF3B;AAGE,MAAA,OAAO,EAAGF,KAAK,CAACC,UAAN,CAAiBI,OAH7B;AAIE,MAAA,WAAW,EAAGL,KAAK,CAACC,UAAN,CAAiBE;AAJjC;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAfD;;KAAMJ,a;;AA4DN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport Head from 'next/head'\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta name=\"description\" content= {props.meetupData.description} />\r\n      </Head>\r\n      <MeetupDetail\r\n        image= {props.meetupData.image}\r\n        title= {props.meetupData.title}\r\n        address= {props.meetupData.address}\r\n        description= {props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect('mongodb+srv://userName3:7830824227@cluster0.cmune.mongodb.net/meetup?retryWrites=true&w=majority')\r\n\r\n  const db = client.db()\r\n\r\n  const meetupCollection = db.collection('meetup');\r\n\r\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\r\n  client.close()\r\n  return {\r\n    fallback: \"blocking\",\r\n    paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n  \r\n  const client = await MongoClient.connect('mongodb+srv://userName3:7830824227@cluster0.cmune.mongodb.net/meetup?retryWrites=true&w=majority')\r\n\r\n  const db = client.db()\r\n\r\n  const meetupCollection = db.collection('meetup');\r\n\r\n  const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupId)})\r\n   console.log(selectedMeetup)\r\n  client.close()\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        image: selectedMeetup.image,\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}